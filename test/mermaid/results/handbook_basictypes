classDiagram
class Boolean {
    +isDone: boolean
}
class Number {
    +decimal: number
    +hex: number
    +binary: number
    +octal: number
}
class String {
    +color: string
    +color2: string
    +fullName: string
    +age: number
    +sentence: string
    +sentence2: string
}
class Array2 {
    +list: number[]
    +list2: number[]
}
class Tuple {
    +x: [string, number]
    +x2: (string | number)[]
    +x3: (string | number)[]
}
class Color {
    Red
    Green
    Blue
}
<<enumeration>> Color
class Color2 {
    Red
    Green
    Blue
}
<<enumeration>> Color2
class Color3 {
    Red
    Green
    Blue
}
<<enumeration>> Color3
class Color4 {
    Red
    Green
    Blue
}
<<enumeration>> Color4
class Enum {
    +c: Color
    +c2: Color2
    +c3: Color3
    +colorName: string
}
class Any {
    +notSure: any
    +notSure2: string
    +notSure3: boolean
    +notSure4: any
    +list: any[]
}
class Void {
    +warnUser(): void
    +unusable: void
}
class NullAndUndefined {
    +u: undefined
    +n: null
}
class Never {
    +error(message: string): never
    +fail(): never
    +infiniteLoop(): never
}
class Object {
    +create(o: object): void
}
<<Interface>> Object
class TypeAssertions {
    +someValue: any
    +strLength: number
    +someValue2: any
    +strLength2: number
}